name: CI/CD for Spring Boot with Docker

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    name: Build and Deploy
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Cache Gradle dependencies
        uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle

      - name: Grant execute permission to gradlew
        run: chmod +x ./gradlew
        working-directory: backend

      - name: Build with Gradle
        run: ./gradlew clean build -x test
        working-directory: backend

      - name: Build Docker image
        run: |
          docker build -t scoretracker:latest ./backend

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push Docker image
        run: |
          docker tag scoretracker:latest ${{ secrets.DOCKER_USERNAME }}/scoretracker:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/scoretracker:latest

      - name: Deploy to EC2
        run: |
          ssh -o StrictHostKeyChecking=no -o ServerAliveInterval=60 -o ServerAliveCountMax=10 -i nineth.pem ec2-user@${{ secrets.EC2_HOST }} "
            docker pull ${{ secrets.DOCKER_USERNAME }}/scoretracker:latest &&
            docker stop scoretracker-container || true &&
            docker rm scoretracker-container || true &&
            docker run -d \
              --name scoretracker-container \
              --network ec2-user_app-network \
              -e SPRING_DATASOURCE_URL=${{ secrets.SPRING_DATASOURCE_URL }} \
              -e SPRING_DATASOURCE_USERNAME=${{ secrets.SPRING_DATASOURCE_USERNAME }} \
              -e SPRING_DATASOURCE_PASSWORD=${{ secrets.SPRING_DATASOURCE_PASSWORD }} \
              -e AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }} \
              -e AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }} \
              -e JWT_SECRET=${{ secrets.JWT_SECRET }} \
              -p 8080:8080 \
              scoretracker:latest
          "
